[{"slug":"2017-08-15-Low-Rez-Guess","category":"blog","title":"Low Rez Guess","description":"This quick guessing arcade game has been made for the LowRez Jam 2017.","tags":["Gamedev","Game jam"],"body":"\n![LowRezGuess](/assets/posts/LowRezGuess/banner.png)\n\n## Context\n\nThis game has been made for the [LowRez Jam 2017](https://itch.io/jam/lowrezjam2017). The goal of this jam is to create a game with a resolution of 64x64 pixels. There was no other restrictions (like a theme) but I think this is a very good constraint to work with.\n\n_In this game, your goal is to guess what is shown in images from various categories (vehicles, animals, objects, etc.). The faster you guess the images, the more points you earn!_\n\n## The idea\n\nMy idea was to use the low resolution constraint to make things hard to decipher on screen. I then thought of a growing picture, that could start by being 1 \\* 1 pixel, and as the image grow, at some point you can understand what the image is showing. The player could gain points based on his speed: the faster he gets the picture, the more points he gets.\n\n## The game\n\nAt the beginning of a round, you will see 3 choices, that correspond to the left, right and up directional key. All rounds start with a really small and pixilated image at the center of the screen. As time goes on, the picture will grow to fill the entire screen. You have to press the key corresponding to what the image depicts. The faster you are, the more points you get!\n\nThere are various categories of objects (101 to be precise) and they come from training data for deep learning. The data set is available on [Caltech's website](http://www.vision.caltech.edu/Image_Datasets/Caltech101/).\n\nI wanted to make a very accessible game, so I integrated internationalization by supporting 6 languages: English, French, Italian, Spanish, Portuguese and Deutsche. This was easy, because I only had to translate the 101 categories name, and some of the UI text. The major difficulty was find a readable pixilated font, that also support accented letters (for languages like french and spanish). I didn't manage to find one, so I edited one with only ASCII letters to add accented letters.\n\n## Play the game\n\n<div style=\"aspect-ratio: 1\">\n<iframe frameborder=\"0\" src=\"https://itch.io/embed-upload/567546?color=8f0000\" allowfullscreen=\"\" width=\"100%\" height=\"100%\"><a href=\"https://gabrielvidal.itch.io/low-rez-guess\">Play Low Rez Guess on itch.io</a></iframe>\n</div>\n\n## Tools\n\n- I mostly used [Unity](https://unity.com/) for everything from animations, IO, scripting and integration of all elements.\n- I made the music myself using [Bosca Ceoil](https://boscaceoil.net/)\n- [Freesound.org](https://freesound.org/) for the sound effects\n- As said earlier, all the images that the player can guess come from a training dataset for image recognition available on [Caltech's website](http://www.vision.caltech.edu/Image_Datasets/Caltech101/)\n"},{"slug":"2017-12-15-first-prototype","category":"blog","title":"First Prototype","description":"I decided to use Unity engine, because it's the game engine I'm the most comfortable working with. First I started to work on a plant system. I want the player to be able to plant plants and watch them grow in fast motion.\n","tags":["Gamedev"],"body":"\nI decided to use [Unity](https://unity.com/) engine, because it's the game engine I'm the most comfortable working with.\nFirst I started to work on a plant system. I want the player to be able to plant plants and watch them grow in fast motion.\n\n## Mesh generation\n\nTo create plants, I decided to generate the plant meshes procedurally in order to generate plants based on the surroundings.\n\nThe plants are constructed with multiple cylinders with varying width and position.\n\n<div class=\"figure\">\n  <figure>\n    <img src=\"/assets/projects/GrenGame/prototype/SectionSegment.PNG\">\n    <figcaption>The meshes are constructed from triangles</figcaption>\n  </figure>\n</div>\n\nI then wrote some code to procedurally generate this mesh, starting with a single segment.\n\n<div class=\"grid\">\n  <div class=\"cell cell--12 cell--lg-6 figure\">\n    <figure>\n      <img src=\"/assets/projects/GrenGame/prototype/MeshCreation2.gif\">\n      <figcaption>A cylindrical mesh composed of only the two ends</figcaption>\n    </figure>\n  </div>\n  <div class=\"cell cell--12 cell--lg-6 figure\">\n    <figure>\n      <img src=\"/assets/projects/GrenGame/prototype/MeshCreation3.gif\">\n      <figcaption>The final result for a single plant segment</figcaption>\n    </figure>\n  </div>\n</div>\n\n### Animation & Noise\n\nI wanted to make the plant grow fast in front of the player. To do this, animating the meshes was the next step. One essential component is also noise, to make the plant diverse and procedural. The noise I used is a 3D Perlin noise.\n\n- Radial noise (for the variation in the with of the trunk)\n- Noise influence across the length of the stem\n- Noise in the growth animation before reaching the final girth\n\nThese noises are controlled across the length of the stem and also across time.\n\nThe way I constructed the segments permitted me to easily animate the width of the segment with some noise.\n\n<div class=\"figure\">\n  <figure>\n    <img src=\"/assets/projects/GrenGame/prototype/MeshCreation4.gif\">\n    <figcaption>An animated version of a single trunk segment</figcaption>\n  </figure>\n</div>\n\nThe next step was putting these cylinders back to back to create growing stems. I tried to make all the parameters accessible to have a maximum of control on the way meshes are created. Only my imagination is the limit!\n\n<div class=\"grid\">\n  <div class=\"cell cell--12 cell--lg-6 figure\">\n    <figure>\n      <img src=\"/assets/projects/GrenGame/prototype/MeshCreation7.gif\">\n      <figcaption>A growing stem</figcaption>\n    </figure>\n  </div>\n  <div class=\"cell cell--12 cell--lg-6 figure\">\n    <figure>\n      <img src=\"/assets/projects/GrenGame/prototype/long.png\">\n      <figcaption>A really long and blocky plant (more like an icycle)</figcaption>\n    </figure>\n  </div>\n</div>\n\n### Collision\n\nI wanted to make plants grow in the environnement and be completely procedural so the next step was making the plants collide with the surroundings.\n\nI used Unity raycasts to calculate collision all at once when the mesh is created. After a lot of trial and error, I finally managed to make this work!\n\n<div class=\"figure\">\n  <figure>\n    <img src=\"/assets/projects/GrenGame/prototype/collision.PNG\">\n    <figcaption>A really long mesh trapped in a confined space</figcaption>\n  </figure>\n</div>\n\nI then experiment with very thin, spaghetti-like plants, that would look like cables roaming through the white default sandbox.\n\n<div class=\"grid\">\n  <div class=\"cell cell--12 cell--lg-6 figure\">\n    <figure>\n      <img src=\"/assets/projects/GrenGame/prototype/cables1.png\">\n    </figure>\n  </div>\n  <div class=\"cell cell--12 cell--lg-6 figure\">\n    <figure>\n      <img src=\"/assets/projects/GrenGame/prototype/cables2.png\">\n    </figure>\n  </div>\n</div>\n\n<div class=\"figure\">\n  <figure style=\"max-width:100%; width: 100%\">\n    <img src=\"/assets/projects/GrenGame/prototype/cables3.png\">\n    <a href=\"https://www.reddit.com/r/pcmasterrace/comments/5r1cr4/cable_management_from_the_depths_of_hell/\"> <figcaption style=\"font-style: italic;\">Cable \"management\" from the depths of hell</figcaption></a>\n  </figure>\n</div>\n\n### Gravitation influence\n\nAnother really important component is the influence of gravity along the plant. This value can be controlled along the stem, to have a plant go upwards (for trees for example), or be close to the ground, like vines or roots.\n\n<div class=\"grid\">\n  <div class=\"cell cell--12 cell--lg-6 figure\">\n    <figure>\n      <img src=\"/assets/projects/GrenGame/prototype/Gravity_Up.PNG\">\n      <figcaption>plants going upwards as they grow</figcaption>\n    </figure>\n  </div>\n  <div class=\"cell cell--12 cell--lg-6 figure\">\n    <figure>\n      <img src=\"/assets/projects/GrenGame/prototype/Gravity_Down.PNG\">\n      <figcaption>Plants with really heavy ends, so going downwards when reaching a certain height</figcaption>\n    </figure>\n  </div>\n</div>\n\n<div class=\"figure\">\n  <figure style=\"max-width:100%; width: 100%\">\n    <img src=\"/assets/projects/GrenGame/prototype/WIP7.PNG\">\n    <figcaption>A plant going straight up and then crawling on the floor</figcaption>\n  </figure>\n</div>\n\n## Final results\n\nCombining all these elements, we can get visuals like this:\n\n<div class=\"figure\">\n  <figure>\n    <img src=\"/assets/projects/GrenGame/prototype/Combination.gif\">\n    <figcaption>Procedural mesh generation with collision handling and animated growth</figcaption>\n  </figure>\n</div>\n"},{"slug":"2019-02-04-What-do-games-need","category":"blog","title":"What do games need","tags":["CSUMB","Game Design"],"body":"\nThis text was written for a Game design assignment.\n\n## What do games need?\n\n**Games should involve our creativity as much as skill.**\n\nMore and more free games gain popularity, as a younger audience take over the elder. The goal of most of these games is to make profit, and all means are being employed to make the player spend money or to gain money behind his back using ads or selling his personal data. Keep in mind that if we use a free service, this service uses us as a product to make money. And because most players won’t spend money on free games, the game needs us to play the most amount of time possible, to watch a lot of ads, that it can make money off. Thus, free games don’t require us to have any kind of skill or creativity, they just want us to play the longer we can. Therefore “Merge” type games have gained a lot of popularity these days, they don’t require us to have any kind of intelligence, skill or creativity (even chimpanzees can play it).\n\nEven if this type of game is not the major parts of games, some games use competition to make us play longer. However, competition rarely highlights creative behaviors (most competitive game are games where players fight each other). Some games try to support creative behaviors, even in a fighting game, where you can have a creative strategy (for example, the card game Hearthstone, in which you create your own deck to battle other players). The creativity is often limited by resources (cards, for Hearthstone) or skill (if you can use a wide range of weapons to defeat enemies, but some are better than others. To be creative and use other weapons, you must be good at the game in order to compensate the bad weapon).\n\nRare are the games that value creativity more than anything else. I can understand that this can be unfair, as some people are creative right away, and some feel not creative at all. We often think that it is useless to play these kinds of games, as we will always lose because we are not creative. However, we don’t say that when the game is skill-involved. We have to understand that creativity can be developed as much as skill or intelligence: through practice. You can get more creative by playing creative games, or by playing with creative people.\n\nOne thing I would like to point out is that competition is not an enemy of creativity. The competition process can value creativity as much as skill. For example, a game jam offering prizes can be a very competitive environment, but the valuable competence would be creativity instead of skill, for example in an e-sport competition.\n"},{"slug":"2019-02-28-Game-Concept","category":"blog","title":"Heist Game Concept","description":"Multiplayer museum robbery coop/competitive arcade game. Players need to cooperate in order to steal a valuable item in a museum or a jeweler. However, there is not enough stuff to steal for all players (you have to be the fastest and use low blows). Fast paced cartoonish visuals and mechanics. Guards keep the things to rob and they adapt each time they catch a player (like in Hello Neighbor)\n","tags":["Gamedev","Idea","CSUMB","Game Design"],"body":"\n## Pitch\n\n_Multiplayer museum robbery coop/competitive arcade game.\nPlayers need to cooperate in order to steal a valuable item in a museum or a jeweler. However, there is not enough stuff to steal for all players (you have to be the fastest and use low blows). Fast paced cartoonish visuals and mechanics. Guards keep the things to rob and they adapt each time they catch a player (like in Hello Neighbor)_\n\nFinally, I think the game will be more about infiltration and cooperation, not much competition between players. I want the atmosphere to be a little bit oppressive, so when players are focused when sabotaging traps or forcing open doors, they can be really scared as the keeper rushes toward them.\nI think I want the game to feel like in the game Hello Neighbor, that is when you are investigating inside the neighbor’s house, you feel pressured as every noise could be him or not, and sometimes you are trapped inside, because you discover the layout of rooms and door as you get chased.\nYou feel insecure as soon as you enter his property, because there is no place he can’t reach or find you.\n\n![The thing to rob](/assets/posts/Robbers/items.png)\n\n## The Keeper\n\nThe keeper is an AI. It can place traps and security systems.\nI’m thinking that multiple keepers can be a good alternative to compensate for the number of players, instead of having only one keeper that is impossible to fool.\n\n<div style=\"display:flex; flex-direction: row; justify-content: center; \">\n<img class=\"image image--md\" src=\"/assets/posts/Robbers/guard.jpg\"/>\n<ul>\n<li>Players need to complete skill checks to disable security systems.</li>\n<li>Players walk slower than the security guard, so when a player gets chased, he can escape only if he outsmarts the guard. If a player get caught, the guard will carry on his back and throw him out of the building (The player will have lost all his stuff, and he will be back at the main entrance of the building).</li>\n<li>The main idea behind the fact that the guard adapts from players behavior is that he will remember where and when he has seen players, and he will place traps in the most frequently used spots (for example, in the middle of a corridor).</li>\n</ul>\n</div>\n\n![The thing to rob](/assets/posts/Robbers/securities.png)\n\n## Players\n\n<div style=\"display:flex; flex-direction: row; justify-content: center; \">\n<img class=\"image image--md\" src=\"/assets/posts/Robbers/player.jpg\" style=\"aspect-ratio: 16/9\"/>\n<ul>\n<li>Players will be able to gather items, such as a flashlight, a grappling hook, some firecrackers to distract the guard and more.</li>\n<li>Because players are smaller than the guard, they can fit and crawl through vents in the place they rob. However, if players use vents too often, the guard will seal off vents and players will have to use special items in order to unblock them. Even if the guard can’t fit in the vents, you can’t stay in it because he can steal, grab you and carry you out.</li>\n</ul>\n\n</div>\n\n\nWhen a player reaches the thing to steal and try to walk with it, the guard will be faster and the player carrying will be considerably slower. The player can throw the object in a direction to prevent the guard from getting it back.\nIf the guard gets the item back, he will put it back at its place and stay around to avoid players robbing it back as soon as it’s back.\n\nWhen a player performs a disarming (or sabotage) action to disable a trap or open a closed door, He will have to do a skill check. A skill check is a quick action that he has to perform in a short period of time (for example, click on a button as soon as it’s green, and if he presses it when it’s red, he loses). If a player fails a skill check, the progress of the overall action will be stopped, and the guard will be notified of the position of the player (imagine the player making a big noise, this will draw the attention of the keeper).\n\n\n## The Map\n\nThe map is composed of two parts:\n\n* The outside, where players are safe and where the keeper will not chase players that tried to steal the hoard.\n* The inside, where players can’t legally be. If the keeper sees them inside this zone, he will chase them.\n\nEvery time a player is caught inside by the keeper, he will be carried to a trash conduit that is directly connected to the outside.\n\nThe core loop of a game is that players enter the building through the main entrance, and by sabotaging barricades and by unlocking doors, they will have more and more access to the entirety of the building. New entrance will be unlocked and they will have to navigate through this maze of doors and rooms to find a way to access the main room, where the valuable things lie.\nThe keeper has access to all the rooms,so players must be very careful when entering an unexplored room, as he could be waiting inside.\n\nA basic map could be a map with a direct view on the thing to steal, for example a painting. The players can’t access the painting directly, as it’s protected by multiple layers of security systems. For example, the door to the room is locked and the key is in another room. In addition, there are lasers around the painting that will trigger the emergency state of the building if something passes through. On top of that, the painting is in an indestructible glass box that has to be opened with care and the right tools (a blowtorch). Opening the box doesn’t make a lot of noise, but it takes a long time, so players have to plan their attack, and set up a lot of things beforehand.\n\n![Core gameplay loop](/assets/posts/Robbers/GameplayLoop.png)\n"},{"slug":"2019-03-11-MDA","category":"blog","title":"MDA","tags":["Gamedev","Game Design"],"body":"\n## Definition\n\nIn game design the **Mechanics-Dynamics-Aesthetics** (MDA) framework is a tool used to analyze games. It formalizes the consumption of games by breaking them down into three components: Mechanics, Dynamics and Aesthetics. These three words have been used informally for many years to describe various aspects of games, but the MDA framework provides precise definitions for these terms and seeks to explain how they relate to each other and influence the player's experience.\n\n![qze](/assets/projects/Tictactocalypse/Mda_framework.png)\n\n* **Mechanics** are the base components of the game - its rules, every basic action the player can take in the game, the algorithms and data structures in the game engine etc.\n* **Dynamics** are the run-time behavior of the mechanics acting on player input and \"cooperating\" with other mechanics.\n* **Aesthetics** are the emotional responses evoked in the player.\nThere are many types of aesthetics, including but not limited to the following eight stated by Hunicke, LeBlanc and Zubek:\n\n  * ***Sensation*** (Game as sense-pleasure): Player enjoys memorable audio-visual effects.\n  * ***Fantasy*** (Game as make-believe): Imaginary world.\n  * ***Narrative*** (Game as drama): A story that drives the player to keep coming back\n  * ***Challenge*** (Game as obstacle course): Urge to master something. Boosts a game's replayability.\n  * ***Fellowship*** (Game as social framework): A community where the player is an active part of it. Almost exclusive for multiplayer games.\n  * ***Discovery*** (Game as uncharted territory): Urge to explore game world.\n  * ***Expression*** (Game as self-discovery): Own creativity. For example, creating character resembling player's own avatar.\n  * ***Submission*** (Game as pastime): Connection to the game, as a whole, despite of constraints.\n\n## Tictactocalypse analysis\n\n### Mechanics\n\nPlayers place tokens on a 4 by 4 grid, trying to align groups of three pieces, to earn point. Once a player gets the required amount of point to win, the game stops. If the timer runs out and no one has reached the goal, the player with the most point wins the game.\n\nPlayers can also trigger events to knock other players’ pieces of the board, or to reinforce their position by making pieces invulnerable to events. Events have a cooldown after they have been triggered according to the strength of the triggered event. Players receive new event every 5 seconds.\n\nIf a piece is away from its slot but still on the board, a clock will appear on the piece, and after a short time, the piece will be moved to its original position. During this time, other pieces can claim the slot by placing a piece on it.\n\nEvery 5 seconds, all players win 3 points per groups of three pieces aligned, and the events each player can trigger are changed.\n\n### Dynamics\n\nGiven that there are 2 types of events, events helping the player who triggers it and events that slow all players, they have to choose carefully what event play at what time of the game, as they might do more damage to your own pieces than to other players.\n\nThe cooldown of events is not shown, and players have to plan when to trigger their events in order to maximize the number of events they can play, as they only receive a new event every 5 seconds.\n\nPlayers have to find the balance between trying to actively harm other player and trying to place pieces on the board to collect points in order to win, and few events serve only one of these goals.\n\nAfter a few games, players will know what event do what and how to place pieces in order to optimize their position, as some event are only harmful to some part of the bo ard. Players will also know how to place pieces quickly and efficiently, as the placing system can be difficult to apprehend. In the end, the fastest players will be rewarded.\n\n### Aesthetics\n\nFellowship, Challenge, Sensation, Submission\n\nThe game being a competitive multiplayer game, it sure forces players to deal with each other, as they fight in order to win. Some events being exclusively destructive and harmful, even to the player triggering it, these actions of pure destruction may change the relationships of players past the time of play. This game is also very challenging. More players mean more events, making the game more and more apocalyptic. Players can play in a very competitive mode, or they can play in a more casual way, just messing around with the events. Advanced players only have the knowledge of what the events do, they are not intrinsically favored by the game.\n\n#### Current aesthetics outcomes\n\nI think the game TICTACTOCALYPSE have sensation and fellowship as main aesthetics outcomes.\n\nSensation because the screen is filled with events, they seem to make no sense because they are from different universe (an alien, an ancient lion statue, a giant man with chopsticks). This feeling of chaos is one of the aesthetics outcomes I want for my game.\n\nGiven that this game is a race to score the most point, players must compete and attack each other with events. I don’t think for now that this outcome is very important as there is no clear distinctions between events to help yourself and events to slow other players, thus players seem to fight and endure events together and not against one another.\n\nAnother aesthetic outcome that has surfaced is challenge, because events target random pieces and often not the pieces we want, so it’s difficult to get pieces aligned without getting disturb by events we might have triggered.\n\n#### Desired aesthetics outcomes\n\nI really want this game to be competitive and to help players battle each other. To do so, events will be categorized depending of the players they target. Bonuses events will be a beneficial event targeted to the player that triggered it, and maluses event will be detrimental to all players except the player that launched it. This way players would have much more control over what playstyle they want to adopt (slow others or try to win).\n\nI will also try to reinforce the discovery part of the game, as I will increase the number of events and tweak their possible arrival in the game, to have players discover them even if they played a lot to the game (even though the discovery will be very limited as adding events to the game is very time consuming and 5 seconds are enough to see the event).\n\nSensation will also be an important part of the game, as I try to make the game visually appealing and the events more and more chaotic. For now, there is no sounds in the game, and I think adding some can change a lot to the way the game is perceived, as a lot of things are lacking animation to tell the player what they are for or why they do what they do.\n"},{"slug":"2019-03-18-Rulesheet","category":"blog","title":"Rulesheet","tags":["Game Design","Gamedev"],"body":"\n### Main Menu\n\nChoose the number of players and the score to win by clicking on the corresponding buttons. To start the game, click on the button entitled “Play”.\n\n### Goal\n\nThe goal is to be the first to have the required number of points to win.\n\nYou earn points by having three or more piece of your color aligned. Multiple line of three pieces can be aligned (a single piece can make multiple points at once).\n\nThe lines of three pieces (horizontal, vertical or diagonal) are counted every three seconds, thus giving players points (one point per piece).\n\nTo place a piece on the board, press your main action key (it varies depending of the player, see the table below). You can change to preview position by pressing the left and right keys. You will first have to choose the row, and then the actual slot.\n\nMultiples preview piece will browse the board and press the main button to select a row on the board. If you press the main button once again, it will select a slot and finally place your piece on the slot. You can’t place your piece on a slot that already has a piece on it.\n\n### Events\n\nYou can press your event buttons (two per players, they vary depending of the player, see the table below) to trigger events and disrupt other players. All events have a specific cooldown. You will have to wait before you can trigger an event with the button you previously pressed.\n\nAs events can’t overlay each other, you may not be able to trigger an event if it has not the space to happen around the board.\n\nSome events may move your pieces around. If the piece falls off the grid, it is no longer part of the game and the slot it was on become empty. If the piece is moved away from its slot and is still on the board, after a short period of time indicated by a cooldown clock on the piece, it will go back to its slot.\n\n### Inputs (all on a single keyboard)\n\n<html>\n   <head>\n    <style>\n      @font-face { font-family: Keyboard; src: url('/assets/projects/Tictactocalypse/fonts/Keyboard.otf') format(\"opentype\"); }\n      .keyboard {\n         font-family: Keyboard;\n         font-size: 4rem;\n         text-align: center;\n         margin-bottom: -5em;\n         padding: 0;\n      }\n    </style>\n   </head>\n   <body>\n<table style=\"width:100%\">\n  <tr>\n    <th style=\"visibility:hidden;\"></th>\n    <th style=\"text-align: center\">Main Button</th>\n    <th style=\"text-align: center\">Event Button 1</th>\n    <th style=\"text-align: center\">Event Button 2</th>\n  </tr>\n  <tr>\n    <td>Player 1</td>\n    <td class=\"keyboard\">q</td>\n    <td class=\"keyboard\">s</td>\n    <td class=\"keyboard\">t</td>\n  </tr>\n  <tr>\n    <td>Player 2</td>\n    <td class=\"keyboard\">W</td>\n    <td class=\"keyboard\">A</td>\n    <td class=\"keyboard\">D</td>\n  </tr>\n  <tr>\n    <td>Player 3<sup id=\"fn1-rf\"><a href=\"#fn1\">1</a></sup> </td>\n    <td class=\"keyboard\">5</td>\n    <td class=\"keyboard\">4</td>\n    <td class=\"keyboard\">6</td>\n  </tr>\n  <tr>\n    <td>Player 4</td>\n    <td class=\"keyboard\">I</td>\n    <td class=\"keyboard\">J</td>\n    <td class=\"keyboard\">L</td>\n  </tr>\n</table>\n\n<aside class=\"wb-fnote\" role=\"note\">\n <dl>\n  <dd id=\"fn1\">\n   <p class=\"fn-rtn\"><a href=\"#fn1-rf\">1.</a> On the numeric keypad</p>\n  </dd>\n </dl>\n</aside>\n</body>\n</html>\n"},{"slug":"2019-03-25-FinalReflection","category":"blog","title":"Final Reflection","tags":["Game Design","Gamedev"],"body":"\nThis game is fun to play and triggers competitive behaviors among players, but I think it lacks some elements that could have made it better.\n\nAt first, I wanted it to be like the game Tricky Towers: a physic-based game, fun to play with friends with a little bit of competition, random events. But there is something in this game that I have to failed to implement is Tictactocalypse. The fact that all player place pieces on the same board is maybe too much (in Tricky Tower, each player has a individual tower) and bonuses and maluses are maybe too powerful.\n\nAnother thing that I think is missing is the discovery aesthetic to the game. I think I could have made this aesthetic more important by adding more event and changing the scarcity of them (maybe have some really rare event). For now, there only are 4 different events, and in a single game, a new player can see them all.\n"},{"slug":"2020-05-03-Tiger","category":"blog","title":"Tiger","tags":["EPITA"],"body":"The Tiger Compiler project is a C++ implementation of a Tiger compiler.\n\nThe Tiger language is described by [Andrew Appel](https://www.cs.princeton.edu/~appel/) in his [Modern Compiler Implementation](https://www.cs.princeton.edu/~appel/modern/) books, and constitutes an important project in the [EPITA](/archive?tag=EPITA) curriculum. \n\n<div class=\"figure\">\n  <figure style=\"max-width: 30%\">\n    <img src=\"/assets/posts/EPITA/tiger.png\" >\n    <figcaption>A badly drawn tiger</figcaption>\n  </figure>\n</div>\n\nThis was group project (4 members) carried during several months.\n"},{"slug":"2021-01-31-France-IOI","category":"blog","title":"France-IOI internship","tags":["Work","EPITA"],"body":"\n## France-IOI\n\n[France-IOI](http://www.france-ioi.org/) is a non-profit association founded in June 2004 with the aim of developing the selection and training of the French team for the International Olympiad in Informatics (IOI).  Its board of directors is composed of four founding members (Mathias Hiron, Arthur Charguéraud, Fabrice Bardèche and Joël Courtois) and 7 elected members (Guillaume Le Blanc, Ismael Belghiti, Jacques-Henri Jourdan, Loïc Février, Amaury Pouly, Benjamin Butin and Louis Jachiet).\n\nThe main objectives of the [France-IOI](http://www.france-ioi.org/) are:\nTrain, select and support the French delegation to the IOI.\nCreate and distribute educational content for programming and algorithmic.\nOrganize national and international competitions in programming, algorithmic or computer science discovery.\n\nThe main goal of [France-IOI](http://www.france-ioi.org/) is to make programming and algorithmic accessible for all: free tools and content distributed by the association allow rapid progress, and the [Algorea](http://dev.algorea.org/) platform is the hub of many exercises and training tasks.\n\n## My internship\n\nThe internship focused on the integration between the Front-End and the Back-End of the learning platform, regarding its UI: browsing of the content, management of student groups and progress monitoring, rights management, etc.\nSince the platform is developed by a handful of developers, my main goal as an intern was to increase development speed of the Algorea platform. I worked with the lead developer of the platform ([Damien Leroy](https://github.com/smadbe)) and another intern (also from EPITA).\n\nBecause I had no experience in Angular, Typescript and Rxjs, the internship supervisor tasked me to do a very versatile component, that was a very good introduction to key concepts of the technologies I was going to use for the whole internship. I also had to learn the agile method of doing things: Pull requests must be small enough to be reviewed easily, and the code added to the project must be clean, tested and reviewed by the lead developer.\n\nA designer has already designed most of the components of the platform (so the HTML and CSS), the first part of my work was to adapt these components to make them functional. I had to rewrite some of the components from scratch, given the numerous changes. The main pages of the Algorea website were already built, but it wasn’t ready for production yet. I was tasked to work on the most essential components so that the platform could be used the sooner the better.\n\n![design](/assets/posts/France-IOI/design.png)\n\nMy work was centered around a daily meeting we had (the lead dev, the other intern and I) at 9am, where we would talk about what we did the day prior and what we planned to do the following day. My objective was to create, update, or close at least one pull request a day (you can find a Gantt chart of my pull requests in the figure 1)\n\n### Works done\n\nAt the beginning, each pull request had to be reviewed multiple times, because I had to change a lot of things (correct errors, or refactoring parts of the code), so the progress was pretty slow. As my skill kept growing, the features I had to implement were more and more complex, that’s why the rhythm of my PRs didn’t accelerate.\n\n![Pull requests Gantt Chart](/assets/posts/France-IOI/PRs.png)\n\n### The Stack\n\nDuring this internship, I learned a few new technologies:\n\n* Angular\n* TypeScript\n* Rxjs\n* Sass\n* Karma\n\nI also developed my skills in the following:\n\n* git and Github\n* Javascript\n* the Agile Methodology\n\n## Final thoughts\n\nTo conclude, I would say this internship was a great experience, especially as a first professional experience in web development. I was reluctant at first to work in the web industry as I thought that it was boring and not technical enough, but I faced problems that changed my point of view. The only downside I can think of is the fact that I had to work remotely as France-IOI is internationally based so they don’t have a dedicated workspace.\n"},{"slug":"2021-03-29-Torch-rnn","category":"blog","title":"Torch-rnn","tags":["AI"],"body":"\nNot long ago I downloaded all the Messenger discussions I had with a friend. There were around 10,000 messages and I tough it would be fun to train an AI to learn these discussions, our way to write messages, and come up with discussions on its own.\n\nTo do that I use the [Torch-rnn](https://github.com/jcjohnson/torch-rnn) which is model of recurrent neural network designed to learn text. It's base on [Char-rnn](https://github.com/karpathy/char-rnn)\n\nI developed a shell script to improve my workflow and make this wonderful tool more accessible.\n\n<a class=\"button button--primary button--rounded button--lg\" href=\"https://github.com/GabrielVidal1/torch-rnn-quickstart\"><i class=\"fab fa-github\"></i> See repo on github</a>\n\n{%- include README.md -%}\n"},{"slug":"2021-05-30-Journal","category":"blog","title":"Journal app idea","tags":["Idea"],"body":"\nAn app that make a monthly journal from the things you did each week and wrote articles from data you produced during this time like discussions, calls, photos, position and time.\n\nIt's like a personal diary but with automatic data gathering to help you remember, summarize and write about the bests bits of your life.\n\nThe goal of this app is to help people create memories and keep them in real paper form.\n\n## Data gathering\n\n### Automatic imports from the phone\n\nA lot of data can be imported from others app that already collect data about the user. This data includes :\n\n* Photos, their position and datetime\n* Position in Google Maps\n* Events in Calendar\n* Phone calls\n* And some information about what you did on your phone:\n  * Discussions from messaging apps like Messenger, Whatsapp, Instagram...\n  * Spotify to see music you listened to\n  * Posts you liked\n  * Search history\n\n### Manual\n\nSome information still need to ba gathered manually :\n\n* Persons you saw today\n* Things that happen in real life, like topics of discussions, drama, etc...\n* the mood\n* things you ate each day\n* your feelings about things\n\nThe user will be able to easily enter this information through the note module\n\n## The wiki\n\nWith all this information, the user builds some sort of Wiki of his life. From the places you've been, to the people you've seen, all will be link in an easy to navigate Wikipedia like site.\n\nThe user can also edit things manually to add details, information and to link elements together.\n\nSome pages will we automatically generated where the user can browse data about the information link to this.\n\n* Places\n* Peoples\n* Important dates\n\n## The posts\n\nThe user can writes posts about anything, a person, an event, his life, a place...\nTo do this, there will be a text editor in the app, where you can write text in a Markdown kind of way to add formatting, images, tables, links...\n\nThese posts can also be exported in albums, that the user can order through the app to have a real book of his life.\n\n## Development\n\nThe stack :\n\n* backend on [Firebase](https://firebase.google.com/)\n* Front made with [React](https://reactjs.org/) + [Typescript](https://www.typescriptlang.org/)\n\n### Automatic data gathering\n\nThe data can be imported from the multiple other application that provides access (or APIs) :\n\n* Photos from the gallery (or Snapchat, Google photos, etc...)\n* Calls and messages from the phone (or other app most used by the user like Messenger, Whatsapp, etc...)\n* Position with the location tracking features of Google Maps\n* History of their browser (Chrome, Brave, etc...)\n* History on Youtube\n* Liked posts from different apps\n* Musics from Spotify history\n* Events from calendar app, or Google Agenda\n"},{"slug":"2021-10-05-Digital-Resume","category":"blog","title":"Digital Resume","tags":["Work"],"body":"\nI wanted to remake my resume and why not test a new web front framework.\n\nI made this website with [NuxtJS](https://nuxtjs.org/).\n\nYou can check it out [here](https://gabrielvidal1.github.io/resume) or by clicking the **'Resume'** button in the navbar :)\n\n<a class=\"button button--primary button--rounded button--lg\" href=\"https://gabrielvidal1.github.io/resume\">See my Resume</a>\n"}]